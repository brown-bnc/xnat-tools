name: publish 
on: [workflow_dispatch]

env:
  IMAGE_NAME: brownbnc/xnat-tools

jobs: 
  publish:
    runs-on: ubuntu-latest
    name: 'Bump version and create changelog with commitizen'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create bump and changelog
      uses: commitizen-tools/commitizen-action@0.15.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Store recent changelog changes
      run: |
        echo 'CHANGELOG<<EOF' >> $GITHUB_ENV
        grep -B10000 -m2 "^## v"  CHANGELOG.md | sed '$d' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Store VERSION
      run: |
        echo "VERSION=$(cat pyproject.toml | grep version | head -1 | awk -F: '{ print $1 }'| sed 's/[\",]//g'| tr -d 'version = ')" >> $GITHUB_ENV
    - name: Release to GitHub
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v${{ env.VERSION }}'
        release_name: 'v${{ env.VERSION }}'
        body: ${{ env.CHANGELOG }}
        draft: false
        prerelease: false

    # DOCS
    - name: Set up Python 3.7 
      uses: actions/setup-python@v2 
    - name: Install dependencies 
      run: | 
        python -m pip install --upgrade pip 
        pip install .
        pip install mkdocs mkdocs-material mkdocstrings mkdocs-versioning mkdocs-markdownextradata-plugin
    - name: Set up mkdocs config 
      run: (envsubst 'v${VERSION}' < mkdocs-template.yml) > mkdocs.yml
    - name: Sync 
      run: | 
        git pull
        mkdocs-versioning sync
        rm -rf ./site/.git/
    - name: Build
      run: mkdocs build
    - name: Deploy
      run: mkdocs-versioning -v deploy

    ## Docker   
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |     
          type=semver,pattern={{raw}},value=v${{ env.VERSION }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
